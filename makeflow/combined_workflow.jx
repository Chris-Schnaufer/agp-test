{
  "define": {
    "ARCHIVE_FILE_PATH": ARCHIVE_DIR + ARCHIVE_FILE,
    "METADATA": ARCHIVE_DIR + UUID + "_metadata.json",
    "LEFT_BIN": ARCHIVE_DIR + UUID + "_left.bin",
    "RIGHT_BIN": ARCHIVE_DIR + UUID + "_right.bin",
    "METADATA_CLEANED": CLEANED_META_DIR + UUID + "_metadata_cleaned.json",
    "LEFT_TIF": TIFS_DIR + UUID + "_left.tif",
    "RIGHT_TIF": TIFS_DIR + UUID + "_right.tif",
  },
  "rules": [
    {
      # Make directory to download archive file into
      "command": "mkdir -p ${ARCHIVE_DIR}",
      "environment": {
        "ARCHIVE_DIR": ARCHIVE_DIR
      },
      "inputs": [],
      "outputs": [
        ARCHIVE_DIR
      ]
    },
    {
      # Download archive file
      "command": "wget -O ${ARCHIVE_FILE_PATH} ${ARCHIVE_URL}",
      "environment": {
        "ARCHIVE_DIR": ARCHIVE_DIR,
        "ARCHIVE_FILE": ARCHIVE_FILE,
        "ARCHIVE_URL": ARCHIVE_URL,
        "ARCHIVE_FILE_PATH": ARCHIVE_FILE_PATH
      },
      "inputs": [
        ARCHIVE_DIR
      ],
      "outputs": [
        ARCHIVE_FILE_PATH
      ]
    },
    {
      # Extract the archive
      "command": "unzip ${ARCHIVE_FILE_PATH} -d ${ARCHIVE_DIR}",
      "environment": {
        "ARCHIVE_DIR": ARCHIVE_DIR,
        "ARCHIVE_FILE_PATH": ARCHIVE_FILE_PATH
      },
      "inputs": [
        ARCHIVE_DIR,
        ARCHIVE_FILE_PATH
      ],
      "outputs": [
        METADATA,
        LEFT_BIN,
        RIGHT_BIN
      ]
    },
    {
      # Make a cleaned copy of the metadata
      "command": "mkdir -p ${WORKING_SPACE} && docker run --rm -e BETYDB_URL=${BETYDB_URL} -e BETYDB_KEY=${BETYDB_KEY} -v $(pwd):/mnt -w /mnt chrisatua/agpipeline:metadata-cleaner ${SENSOR} ${FILENAME} ${WORKING_SPACE} ${USERID}",
      "environment": {
        "BETYDB_URL": BETYDB_URL,
        "BETYDB_KEY": BETYDB_KEY,
        "SENSOR": "stereoTop",
        "FILENAME": METADATA,
        "WORKING_SPACE": CLEANED_META_DIR,
        "USERID": ""
      },
      "inputs": [METADATA],
      "outputs": [
        CLEANED_META_DIR,
        METADATA_CLEANED
      ]
    },
    {
      # Make directory to store TIFF files
      "command": "mkdir -p ${TIFS_DIR}",
      "environment": {
        "TIFS_DIR": TIFS_DIR
      },
      "inputs": [],
      "outputs": [
        TIFS_DIR
      ]
    },
    {
      # Convert bin/RGB images to TIFF format
      "command": "docker run --rm -v $(pwd):/mnt -w /mnt chrisatua/agpipeline:rgb2tif ${BIN_FILE} ${METADATA_FILE} ${WORKING_SPACE}",
      "environment": {
        "BIN_FILE": BIN_TIF_PAIR[0],
        "METADATA_FILE": METADATA_CLEANED,
        "WORKING_SPACE": TIFS_DIR
    },
      "inputs": [
        TIFS_DIR,
        METADATA_CLEANED,
        BIN_TIF_PAIR[0]
      ],
      "outputs": [
        BIN_TIF_PAIR[1],
        BIN_TIF_PAIR[1] + ".aux.xml"
      ]
    } for BIN_TIF_PAIR in [[LEFT_BIN, LEFT_TIF], [RIGHT_BIN, RIGHT_TIF]]
  ]
}