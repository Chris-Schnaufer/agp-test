{
  "define": {
    "ARCHIVE_FILE_PATH": ARCHIVE_DIR + ARCHIVE_FILE,
    "METADATA": ARCHIVE_DIR + UUID + "_metadata.json",
    "LEFT_BIN": ARCHIVE_DIR + UUID + "_left.bin",
    "RIGHT_BIN": ARCHIVE_DIR + UUID + "_right.bin",
    "METADATA_CLEANED": CLEANED_META_DIR + UUID + "_metadata_cleaned.json",
    "LEFT_TIF": TIFS_DIR + UUID + "_left.tif",
    "RIGHT_TIF": TIFS_DIR + UUID + "_right.tif",
    "LEFT_SOILMASK": SOILMASK_DIR + UUID + "_left_mask.tif",
    "RIGHT_SOILMASK": SOILMASK_DIR + UUID + "_right_mask.tif",
    "MOSAIC_LIST_FILE": FIELDMOSAIC_DIR + "filelist.txt"
  },
  "rules": [
    {
      # Make directory to download archive file into
      "command": "mkdir -p ${ARCHIVE_DIR}",
      "environment": {
        "ARCHIVE_DIR": ARCHIVE_DIR
      },
      "inputs": [],
      "outputs": [
        ARCHIVE_DIR
      ]
    },
    {
      # Download archive file
      "command": "wget -O ${ARCHIVE_FILE_PATH} ${ARCHIVE_URL}",
      "environment": {
        "ARCHIVE_DIR": ARCHIVE_DIR,
        "ARCHIVE_FILE": ARCHIVE_FILE,
        "ARCHIVE_URL": ARCHIVE_URL,
        "ARCHIVE_FILE_PATH": ARCHIVE_FILE_PATH
      },
      "inputs": [
        ARCHIVE_DIR
      ],
      "outputs": [
        ARCHIVE_FILE_PATH
      ]
    },
    {
      # Extract the archive
      "command": "unzip -o ${ARCHIVE_FILE_PATH} -d ${ARCHIVE_DIR}",
      "environment": {
        "ARCHIVE_DIR": ARCHIVE_DIR,
        "ARCHIVE_FILE_PATH": ARCHIVE_FILE_PATH
      },
      "inputs": [
        ARCHIVE_DIR,
        ARCHIVE_FILE_PATH
      ],
      "outputs": [
        METADATA,
        LEFT_BIN,
        RIGHT_BIN
      ]
    },
    {
      # Make a cleaned copy of the metadata
      "command": "mkdir -p ${WORKING_SPACE} && docker run --rm -e BETYDB_URL=${BETYDB_URL} -e BETYDB_KEY=${BETYDB_KEY} -v $(pwd):/mnt -w /mnt agpipeline/cleanmetadata:latest --metadata ${METADATA} --working_space ${WORKING_SPACE} ${SENSOR} ${USERID}",
      "environment": {
        "BETYDB_URL": BETYDB_URL,
        "BETYDB_KEY": BETYDB_KEY,
        "SENSOR": "stereoTop",
        "METADATA": METADATA,
        "WORKING_SPACE": CLEANED_META_DIR,
        "USERID": ""
      },
      "inputs": [METADATA],
      "outputs": [
        CLEANED_META_DIR,
        METADATA_CLEANED
      ]
    },
    {
      # Make directory to store TIFF files
      "command": "mkdir -p ${TIFS_DIR}",
      "environment": {
        "TIFS_DIR": TIFS_DIR
      },
      "inputs": [],
      "outputs": [
        TIFS_DIR
      ]
    },
    {
      # Convert LEFT bin/RGB image to TIFF format
      "command": "docker run --rm -v $(pwd):/mnt -w /mnt agpipeline/bin2tif:latest --result print --metadata ${METADATA} --working_space ${WORKING_SPACE} ${LEFT_BIN}",
      "environment": {
        "LEFT_BIN": LEFT_BIN,
        "METADATA": METADATA_CLEANED,
        "WORKING_SPACE": TIFS_DIR
    },
      "inputs": [
        TIFS_DIR,
        LEFT_BIN,
        METADATA_CLEANED
      ],
      "outputs": [
        LEFT_TIF
      ]
    },
    {
      # Convert RIGHT bin/RGB image to TIFF format
      "command": "docker run --rm -v $(pwd):/mnt -w /mnt agpipeline/bin2tif:latest --result print --metadata ${METADATA} --working_space ${WORKING_SPACE} ${RIGHT_BIN}",
      "environment": {
        "RIGHT_BIN": RIGHT_BIN,
        "METADATA": METADATA_CLEANED,
        "WORKING_SPACE": TIFS_DIR
    },
      "inputs": [
        TIFS_DIR,
        RIGHT_BIN,
        METADATA_CLEANED
      ],
      "outputs": [
        RIGHT_TIF
      ]
    },
    {
      # Make directory to store SOILMASK files
      "command": "mkdir -p ${SOILMASK_DIR}",
      "environment": {
        "SOILMASK_DIR": SOILMASK_DIR
      },
      "inputs": [],
      "outputs": [
        SOILMASK_DIR
      ]
    },
    {
      # Generate soil mask from LEFT TIFF image
      "command": "docker run --rm -v $(pwd):/mnt -w /mnt agpipeline/soilmask:latest --result print --metadata ${METADATA} --working_space ${WORKING_SPACE} ${LEFT_TIF}",
      "environment": {
        "LEFT_TIF": LEFT_TIF,
        "METADATA": METADATA_CLEANED,
        "WORKING_SPACE": SOILMASK_DIR
    },
      "inputs": [
        SOILMASK_DIR,
        LEFT_TIF,
        METADATA_CLEANED
      ],
      "outputs": [
        LEFT_SOILMASK
      ]
    },
    {
      # Generate soil mask from RIGHT TIFF image
      "command": "docker run --rm -v $(pwd):/mnt -w /mnt agpipeline/soilmask:latest --result print --metadata ${METADATA} --working_space ${WORKING_SPACE} ${RIGHT_TIF}",
      "environment": {
        "RIGHT_TIF": RIGHT_TIF,
        "METADATA": METADATA_CLEANED,
        "WORKING_SPACE": SOILMASK_DIR
    },
      "inputs": [
        SOILMASK_DIR,
        RIGHT_TIF,
        METADATA_CLEANED
      ],
      "outputs": [
        RIGHT_SOILMASK
      ]
    },
    {
      # Make directory to store FIELDMOSAIC files
      "command": "mkdir -p ${FIELDMOSAIC_DIR}",
      "environment": {
        "FIELDMOSAIC_DIR": FIELDMOSAIC_DIR
      },
      "inputs": [],
      "outputs": [
        FIELDMOSAIC_DIR
      ]
    },
    {
      # Create MOSAIC_LIST_FILE file from the soilmask files
      "command": "ls ${SOILMASK_DIR}*.tif > ${MOSAIC_LIST_FILE}",
      "environment": {
        "SOILMASK_DIR": SOILMASK_DIR,
        "MOSAIC_LIST_FILE": MOSAIC_LIST_FILE
      },
      "inputs": [
        SOILMASK_DIR,
        FIELDMOSAIC_DIR,
        LEFT_SOILMASK,
        RIGHT_SOILMASK
      ],
      "outputs": [
        MOSAIC_LIST_FILE
      ]
    },
    {
      # Generate field mosaic from soil mask TIFFs
      "command": "docker run --rm -v $(pwd):/mnt -w /mnt agpipeline/fieldmosaic:latest --result print --metadata ${METADATA} --working_space ${WORKING_SPACE} ${MOSAIC_LIST_FILE} ${SENSOR} \"${MOSAIC_BOUNDS}\"",
      "environment": {
        "MOSAIC_LIST_FILE": MOSAIC_LIST_FILE,
        "METADATA": METADATA_CLEANED,
        "WORKING_SPACE": FIELDMOSAIC_DIR,
        "SENSOR": SENSOR,
        "MOSAIC_BOUNDS": MOSAIC_BOUNDS
    },
      "inputs": [
        FIELDMOSAIC_DIR,
        MOSAIC_LIST_FILE,
        METADATA_CLEANED
      ],
      "outputs": [
        FIELDMOSAIC_DIR + "fullfield_mosaic.png",
        FIELDMOSAIC_DIR + "fullfield_mosaic.png.aux.xml",
        FIELDMOSAIC_DIR + "fullfield_mosaic.tif",
        FIELDMOSAIC_DIR + "fullfield_mosaic.vrt",
        FIELDMOSAIC_DIR + "fullfield_mosaic_10pct.tif",
        FIELDMOSAIC_DIR + "fullfield_mosaic_thumb.tif"
      ]
    }
  ]
}